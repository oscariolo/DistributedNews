services:
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    ports:
      - "9093:9093"  # acceso interno entre contenedores (si lo usan)
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,CONTROLLER://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    networks:
      - kafka-net
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - kafka-net
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka:9093
  
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "8000:11434"
    command: [serve]
  
  spring-server:
    build:
      context: ./distributednewsserver
      dockerfile: Dockerfile
    container_name: server
    ports:
      - "5000:8080"
    depends_on:
      - kafka
      - ollama
    environment:
      KAFKA_BROKER_URL: kafka:9093
      OLLAMA_API_URL: http://ollama:8000

networks:
  kafka-net:
    driver: bridge
